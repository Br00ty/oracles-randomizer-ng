defines:
  # constants
  STARTING_TREE_MAP_INDEX: 0x78

  # hram
  hCameraY: 0xaa
  hCameraX: 0xac
  hMusicVar: 0xb7 # used in filterMusic

  # wram
  wDimitriState: 0xc647
  wAnimalTutorialFlags: 0xc649
  wEssencesObtained: 0xc6bf
  wActiveRing: 0xc6cb
  wRingBoxLevel: 0xc6cc
  wMakuTreeState: 0xc6e8
  wActiveGroup: 0xcc2d
  wActiveRoom: 0xcc30
  wAreaFlags: 0xcc34
  wWarpDestGroup: 0xcc47
  wWarpDestIndex: 0xcc48

  # rom 00
  forceEnableIntroInputs: 0x0886
  playSound: 0x0c98
  setMusicVolume: 0x0cad
  getThisRoomFlags: 0x197d
  openMenu: 0x1ab0
  lookupCollisionTable: 0x1e1f
  setGlobalFlag: 0x31f9

  # rom 02
  _mapMenu_checkCursorRoomVisited: 0x6636
  _mapMenu_checkRoomVisited: 0x6639
  _ringMenu_updateSelectedRingFromList: 0x723b
  clearMenu: 0x50b1

  # rom 04
  applyAllTileSubstitutions: 0x5fef

banks:
  0x00:
  # read 2 bytes from bank e at hl into bc.
  # TODO: these (ff97)s could be replaced with (ff00+97)s
  - readWord: |
      ld a,(ff97)
      push af
      ld a,e
      ld (ff97),a
      ld (2222),a
      ldi a,(hl)
      ld b,a
      ld a,(hl)
      ld c,a
      pop af
      ld (ff97),a
      ld (2222),a
      ret

  # searches for an interaction with ID a and returns the ID address in de,
  # and z flag if found.
  - findObjectWithId: |
      push bc
      ld b,a
      ld de,d041
      .loop
      ld a,(de)
      cp b
      jr nz,.next
      pop bc
      ret
      .next
      inc d
      ld a,d
      cp a,e0
      jr c,.loop
      pop bc
      or a
      ret

  # only increment the maku tree's state if on the maku tree screen, or if
  # all essences are obtained, set it to the value it would normally have at
  # that point in the game. this allows getting the maku tree's item as long
  # as you haven't collected all essences.
  - checkMakuState: |
      ld a,(wActiveGroup)
      cp a,02
      jr nc,.notAtMakuTree
      ld a,(wActiveRoom)
      cp a,38
      jr nz,.notAtMakuTree
      ld a,(wMakuTreeState)
      inc a
      cp a,11
      ret
      .notAtMakuTree
      ld a,(wEssencesObtained)
      inc a
      scf
      jr nz,.notAllEssences
      ld a,0e
      ret
      .notAllEssences
      ld a,(wMakuTreeState)
      ret

  0x02:
  # warp to south lynna present tree if holding start when closing the map
  # screen.
  - treeWarp: |
      ld a,(wKeysPressed)
      and a,08
      jr z,.done
      ld a,(wAreaFlags)
      and a,01
      jr nz,.warp
      ld a,5a
      jp playSound
      .warp
      ld hl,wWarpDestGroup
      ld (hl),80
      inc hl
      ld (hl),78
      ld l,4a
      ld (hl),55
      call 5fbf
      .done
      jp 4fba

  # display portal popup map icons for bridge builders' screen present and
  # symmetry city past.
  - displayPortalPopups: |
      ld a,(wMapMenu_mode)
      and a
      ld a,(wMapMenu_cursorIndex)
      jr nz,.present
      cp a,25
      jr nz,.ret
      ld a,aa
      jr .gotIcon
      .present
      cp a,13
      jr nz,.ret
      ld a,a3
      .gotIcon
      jp 6255
      .ret
      jp 6248

  0x03:
  # flags in wGlobalFlags to be set at start of game.
  - initialGlobalFlags: |
      db 0a,0c,1d,20,23,2b,33,3d,40,41,43,45,ff

  # set flags to skip opening and a bunch of other things. see
  # doc/technical.md for a dictionary of the flags.
  - setInitialFlags: |
      push hl

      # global flags
      ld hl,initialGlobalFlags
      .loop
      ldi a,(hl)
      cp a,ff
      jr z,.done
      push hl
      call setGlobalFlag
      pop hl
      jr .loop
      .done

      # linked global flags
      ld a,(wIsLinkedGame)
      or a
      jr z,.unlinked
      ld a,38
      push hl
      call setGlobalFlag
      pop hl
      .unlinked

      # animal vars
      ld a,(7fff)
      ld (wAnimalRegion),a
      ld a,03
      ld (wDimitriState),a
      ld a,ff
      ld (wAnimalTutorialFlags),a

      # maku tree state (vanished)
      ld a,01
      ld (wMakuTreeState),a

      # room flags 3 | 6 | 7
      ld a,c8
      ld (c739),a

      # room flag 7
      ld a,80
      ld (c8bb),a

      # room flags 5 | 6
      ld a,60
      ld (c8cb),a

      # room flag 6
      ld a,40
      ld (c77a),a
      ld (c76a),a
      ld (c759),a
      ld (c77c),a
      ld (c72e),a
      ld (c897),a
      ld (c73a),a
      ld (c7ba),a
      ld (c78d),a
      ld (c70a),a
      ld (c9f6),a
      ld (c85c),a
      ld (c883),a
      ld (c80f),a
      ld (c703),a
      ld (c790),a
      ld (c77b),a

      # room flag 3
      ld a,08
      ld (c725),a
      ld (c813),a

      # room flag 0
      ld a,01
      ld (c876),a
      ld (c738),a

      # give L-3 ring box
      ld a,10
      ld (c69f),a
      ld a,03
      ld (wRingBoxLevel),a

      pop hl
      ret

  0x04:
  # data for applyAllTileSubstitutions: group,room,flags,yx,tile
  - tileSubTable: |
      db 01,48,00,45,d7 # portal south of past maku tree
      db 00,39,00,63,f0 # open chest on intro screen
      db 00,39,20,63,f1 # closed chest on intro screen
      db 00,6b,00,42,3a # removed tree in yoll graveyard
      db 00,6b,02,42,ce # not removed tree in yoll graveyard
      db 00,83,00,43,a4 # rock outside D2
      db 03,0f,00,66,f9 # water in d6 past entrance
      db 01,13,00,61,d7 # portal in symmetry city past
      db 00,25,00,37,d7 # portal in nuun highlands
      db 05,da,01,a4,b2 # tunnel to moblin keep
      db 05,da,01,a5,b2 # cont.
      db 05,da,01,a6,b2 # cont.
      db 00,24,02,49,63 # other side of symmetry city bridge
      db 00,24,02,59,63 # cont.
      db 00,24,02,69,63 # cont.
      db 00,24,02,79,73 # cont.
      db 01,2c,00,70,69 # ledge in rolling ridge east past
      db 01,2c,00,71,06 # cont.
      db 01,2c,00,72,67 # cont.
      db 00,a9,00,67,f2 # portal sign on crescent island
      db 01,a5,00,35,48 # ledge by library past
      db 01,a5,00,45,0b # cont.
      db 01,a5,00,55,6c # cont.
      db 00,83,00,44,d7 # portal outside D2 present
      db ff

  0x05:
  # check whether a dev jump should happen, then check whether a normal cliff
  # jump should happen.
  - cliffLookup: |
      call devJump
      ret c
      jp lookupCollisionTable
