defines:
  # constants
  BANK_TREASURE_DATA: 0x15
  BANK_OWL_TEXT: 0x3f
  BANK_SMALL_KEY_DROPS: 0x3f
  STARTING_TREE_MAP_INDEX: 0xf8

  # hram
  hBrokenTilePosition: 0x93
  hCameraY: 0xa8
  hCameraX: 0xaa
  hMusicVar: 0xb5 # used in filterMusic

  # wram
  wAnimalTutorialFlags: 0xc646
  wInventoryB: 0xc680
  wShieldLevel: 0xc6a9
  wSwordLevel: 0xc6ac
  wObtainedSeasons: 0xc6b0
  wFeatherLevel: 0xc6b4
  wActiveRing: 0xc6c5
  wRingBoxLevel: 0xc6c6
  wRememberedCompanionRoom: 0xcc42
  wActiveGroup: 0xcc49
  wActiveRoom: 0xcc4c
  wRoomStateModifier: 0xcc4e
  wAreaFlags: 0xcc50
  wDungeonIndex: 0xcc55
  wWarpDestGroup: 0xcc63
  wWarpDestIndex: 0xcc64
  wActiveTileType: 0xccb6

  # rom 00
  multiplyABy4: 0x01c3
  getRandomNumber: 0x041a
  copyMemory: 0x0462
  forceEnableIntroInputs: 0x0862
  playSound: 0x0c74
  setMusicVolume: 0x0c89
  giveTreasure: 0x16eb
  checkTreasureObtained: 0x1717
  getRandomRingOfGivenTier: 0x17b9
  refillSeedSatchel: 0x17e5
  showText: 0x184b
  getThisRoomFlags: 0x1956
  openMenu: 0x1a76
  lookupCollisionTable: 0x1ddd
  convertShortToLongPosition: 0x2089
  objectDelete_useActiveObjectType: 0x219e
  objectCopyPosition: 0x21fd
  objectCopyPositionWithOffset: 0x221a
  interactionSetScript: 0x24fe
  createTreasure: 0x271b
  checkGlobalFlag: 0x30c7
  setGlobalFlag: 0x30cd
  setTile: 0x3a52
  getFreeInteractionSlot: 0x3ac6
  getFreePartSlot: 0x3ea7

  # rom 02
  _closeMenu: 0x4f7b
  clearMenu: 0x5072
  _mapMenu_checkCursorRoomVisited: 0x655d
  _mapMenu_checkRoomVisited: 0x6560
  _ringMenu_updateSelectedRingFromList: 0x716c

  # rom 04
  applyAllTileSubstitutions: 0x5d94

  # rom 05
  _specialObjectGetRelativeTileWithDirectionTable: 0x44aa

  # rom 15
  treasureObjectData: 0x5129

  # rom 3f
  realignUnappraisedRings: 0x4675
  interaction60SubidData: 0x66dc

banks:
  0x00:
  # call a function hl in bank 02, preserving af. e can't be used as a
  # parameter to that function, but it can be returned.
  - callBank2: |
      push af
      ld e,02
      call interBankCall
      pop af
      ret

  # increment hl until (hl) equals either register a or ff. returns z if
  # a match was found.
  - searchValue: |
      push bc
      ld b,a
      .loop
      ldi a,(hl)
      cp b
      jr z,.match
      inc a
      jr z,.noMatch
      jr .loop
      .noMatch
      inc a
      .match
      ld a,b
      pop bc
      ret

  # this is a replacement for giveTreasure that accounts for item progression.
  # call through giveTreasureCustom or giveTreasureCustomSilent, since this
  # function doesn't xor the a that it returns. importantly, this replacement
  # treats c as a subID, not a param, so this should *not* be called by
  # non-randomized whatevers.
  - giveTreasureCustom_body: |
      ld b,a
      push hl
      ld e,BANK_TREASURE_DATA
      ld hl,getTreasureDataBCE
      call interBankCall
      pop hl
      ld a,b
      jp giveTreasure

  # just gives the treasure, no sound or text.
  - giveTreasureCustomSilent: |
      call giveTreasureCustom_body
      xor a
      ret

  # gives the treasure, plays its sound, and shows its text.
  - giveTreasureCustom: |
      call giveTreasureCustom_body
      jr z,.noSound
      push hl
      call playSound
      pop hl
      .noSound
      ld a,e
      cp a,ff
      ret z
      ld b,00
      ld c,e
      call showText
      xor a
      ret

  # override room layout with bank 02's winterLayout when appropriate.
  - loadWinterLayout: |
      push de
      ld a,(wRoomStateModifier)
      cp a,03 # winter
      jr nz,.done
      push bc
      ld bc,9d00
      call compareRoom
      pop bc
      jr nz,.done
      ld a,02 # bank
      ld (ff00+8c),a
      ld hl,winterLayout
      .done
      ld a,(ff00+8c)
      jp 39e2 # can't just ret, idr why

  # check room flags to determine whether to create star ore instead of
  # whatever global flag 0e is. this also fixes a vanilla bug causing star ore
  # to be infinitely rediggable (but only when the first screen is rolled? or
  # that getting it on the first screen doesn't count? something). this is here
  # since there's no room in bank 8.
  - starOreRooms: db 65,66,75,76,ff
  - checkBeachItemObtained: |
      push de
      push hl
      ld de,starOreRooms
      ld h,c8
      .loop
      ld a,(de)
      cp a,ff
      jr z,.done
      ld l,a
      bit 5,(hl)
      jr nz,.done
      inc de
      jr .loop
      .done
      pop hl
      pop de
      ret

  0x01:
  # takes b = high byte of season addr, returns season in b.
  - readDefaultSeason: |
      ld h,7e
      ld l,b
      ld a,(hl)
      ld b,a
      ret

  0x02:
  # warp to ember tree if holding start when closing the map screen.
  - treeWarp: |
      ld a,(wKeysPressed)
      and a,08
      jr z,.done
      ld a,(wAreaFlags)
      and a,AREAFLAG_OUTDOORS
      jr nz,.warp
      ld a,SND_ERROR
      jp playSound
      .warp
      ld hl,cbb7
      ld (hl),05
      xor a
      call 5e7b
      .done
      jp _closeMenu

  # custom room layout for the problematic woods of winter screen in winter.
  # the code here is one 8-tile compression block per line.
  - winterLayout: |
      db 55,80,81,81,81,81
      db 7c,16,80,82,17
      db f0,1b,c4,c4,70,72
      db 00,01,0d,17,c4,80,81,70,71
      db 60,04,70,71,1a,1b,1c,f7
      db 05,80,81,81,70,71,9e,9e
      db 1c,16,04,15,17,80,81
      db 30,1b,99,9b,d9,1a,01,19
      db 00,70,71,15,16,17,f7,7a,8c
      db 11,18,19,80,81,01,19,70

  0x04:
  # data for applyAllTileSubstitutions: group,room,flags,yx,tile
  - tileSubTable: |
      db 00,01,01,52,04 # permanently remove flower outside D6 when cut
      db 00,5c,00,64,48 # extend moblin keep railing as chokept for warning
      db 00,5c,00,74,53 # cont.
      db 00,9a,00,14,12 # remove rock across pit blocking exit from D5
      db 00,8a,00,66,64 # ^ but add rock at bottom of cliff to block ricky
      db 00,9a,00,34,04 # remove bush next to rosa portal
      db 00,b0,00,21,13 # remove spool swamp pits to prevent winter softlock
      db 00,b0,00,51,13 # cont.
  - d2AltEntranceTileSubs: |
      # these are enabled only if entrances are randomized
      db 00,8d,ff,18,04 # remove left stairs
      db 00,8e,ff,12,04 # remove right stairs
  - endTileSubTable: |
      db ff

  # data for checkSetAnimalSavePoint:
  # entered group, entered room, animal room, saved y, saved x.
  - animalSavePointTable: |
      db 04,fa,c2,18,68 # spool swamp cave
      db 05,cc,2a,38,18 # goron mountain east cave
      db 05,b3,8e,58,88 # cave outside d2
      db 04,e1,86,48,68 # cave north of d1
      db 05,c9,2a,38,18 # goron mountain main
      db 05,ba,2f,18,68 # spring banana cave
      db 05,bb,2f,18,68 # cave below spring banana cave
      db 01,05,9a,38,48 # rosa portal
      db 04,39,8d,38,38 # d2 entrance
      db ff

  # if entering certain warps blocked by snow piles, mushrooms, or bushes, set
  # the animal companion to appear right outside the entrance instead of where
  # you left them.
  - checkSetAnimalSavePoint: |
      push bc
      push de
      ld b,a
      ld a,(wWarpDestIndex)
      ld c,a
      ld e,03
      ld hl,animalSavePointTable
      call searchDoubleKey
      jr nz,.done
      ld de,wRememberedCompanionRoom
      ld a,(de)
      cp (hl)
      jr nz,.done
      ld b,02
      inc hl
      inc de
      call copyMemory
      .done
      ld a,c
      pop de
      pop bc
      ret

  0x05:
  # let link jump down the cliff outside d7, in case of winter sans shovel.
  # also let link jump down the snow cliff added in woods of winter. also call
  # devJump if applicable.
  - cliffLookup: |
      call devJump
      ret c
      push af
      ld a,(wActiveGroup)
      or a
      jr nz,.noJumpPopAf
      ld a,(wActiveRoom)
      cp a,d0
      jr nz,.notD7Entrance
      pop af
      cp a,a8
      jr nz,.noJump
      ld a,08
      scf
      ret
      .notD7Entrance
      cp a,9d
      jr nz,.noJumpPopAf
      pop af
      cp a,99
      jr z,.snowJump
      cp a,9b
      jr nz,.noJump
      .snowJump
      ld a,10
      scf
      ret
      .noJumpPopAf
      pop af
      .noJump
      jp lookupCollisionTable

  # do this so that animals don't immediately stop walking onscreen when called
  # on a bridge, namely the one to/from d1.
  - animalEntryIgnoreBridges: |
      call _specialObjectGetRelativeTileWithDirectionTable
      or a
      ret z
      cp a,1a
      ret z
      cp a,1b
      ret

  # this is called to make moosh unrideable on mt cucco in the case of not
  # having flute in a moosh seed.
  - checkFlute: |
      ld a,0e
      jp checkTreasureObtained

  0x06:
  # unset a room flag when the flower outside D6 is broken. see tileSubTable.
  - checkBreakD6Flower: |
      push af
      push bc
      ld bc,0100
      call compareRoom
      pop bc
      jr nz,.done
      ld a,(ff00+hBrokenTilePosition)
      cp a,52
      jr nz,.done
      push hl
      ld hl,c701
      res 0,(hl)
      pop hl
      .done
      pop af
      jp setTile

  # replace a random item drop with gale seeds 1/4 of the time if the player is
  # out of gale seeds. just to be nice since warping out of one-ways is in
  # logic.
  - dropExtraGalesOnEmpty: |
      ld a,TREASURE_GALE_SEEDS
      call checkTreasureObtained
      jr nc,.done
      ld l,b8
      or (hl)
      jr nz,.done
      call getRandomNumber
      cp a,40
      jr nc,.done
      ld c,08
      .done
      call getFreePartSlot
      ret

  # collect modes starting at 80 index this jump table to determine the actual
  # mode.
  - collectSpecialJumpTable: |
      dw collectDiverRoom
      dw collectPoeSkipRoom
      dw collectMakuTree
      dw collectD4Pool

  # master diver's room has chest on the left and reward on the right.
  - collectDiverRoom: |
      ld e,4d
      ld a,(de) # object x position
      cp a,80
      ld e,COLLECT_CHEST
      ret c
      ld e,COLLECT_PICKUP_ALT
      ret

  # bombed wall chest in d7 has an item drop on the left side.
  - collectPoeSkipRoom: |
      ld e,4d
      ld a,(de) # object x position
      cp a,80
      ld e,COLLECT_FALL_KEY
      ret c
      ld e,COLLECT_CHEST_MAP_OR_COMPASS
      ret

  # maku tree item drops at a specific script pos, otherwise use regular mode.
  - collectMakuTree: |
      ld a,(d258) # script position
      cp a,8e
      ld e,COLLECT_FALL
      ret z
      ld e,COLLECT_PICKUP
      ret

  # when the falling item hits the water, it creates a new item interaction.
  # that one should have the mode that requires diving to get the item.
  - collectD4Pool: |
      ld e,54
      ld a,(de) # object z position
      sub a,01
      ld e,COLLECT_FALL_KEY
      ret c
      ld e,COLLECT_DIVE
      ret

  0x07:
  # if wearing dev ring, change season regardless of where link is standing.
  - devChangeSeason: |
      ld a,(wActiveRing)
      cp a,DEV_RING
      ret z
      ld a,(wActiveTileType)
      cp a,08
      ret

  0x08:
  # call giveTreasureCustom instead of giveTreasure in the shop iff the given
  # item is randomized.
  - shopGiveTreasure: |
      push bc
      ld b,a
      ld a,l
      push hl
      ld hl,shopItemLowAddrs
      call searchValue
      pop hl
      ld a,b
      pop bc
      jr z,.next
      call giveTreasure
      ret
      .next
      call giveTreasureCustom
      ret

  # these are the low bytes of randomized shop item data addresses.
  - shopItemLowAddrs: |
      db e9,cf,d3,d9

  # star ore item doesn't normally get a subid. values are replaced at
  # randomization.
  - setStarOreIds: |
      inc l
      ld (hl),45
      inc l
      ld (hl),00
      ret

  0x09:
  # use giveTreasureCustom in the subrosian market when appropriate.
  - marketGiveTreasure: |
      push af
      ld a,l
      cp a,db
      jr z,.custom
      cp a,e3
      jr z,.custom
      cp a,f5 # trade star ore
      jr z,.customFakeId
      pop af
      cp a,TREASURE_RING
      jr nz,.next
      call getRandomRingOfGivenTier
      .next
      call giveTreasure
      ld e,42
      ret
      .customFakeId
      push hl
      ld hl,c694
      set 0,(hl)
      pop hl
      .custom
      pop af
      call giveTreasureCustom
      pop de
      scf
      ret

  # mt. cucco platform cave item is normally created using ring-specific code.
  # values are replaced at randomization.
  - createMtCuccoItem: |
      ld bc,0000
      call createTreasure
      jp 6421

  0x0a:
  # flags in wGlobalFlags to be set at start of game.
  - initialGlobalFlags: |
      db 0a,1c,ff

  # in linked, start with the item that *would* be in the d0 sword chest
  # instead of the sword.
  - giveLinkedStartItem: |
      ld a,(7ffe)
      ld c,a
      ld a,(7ffd)
      ld (c682),a
      call giveTreasureCustomSilent
      xor a
      ld (wInventoryB),a
      ret

  # set flags to skip opening and a bunch of other things. see
  # doc/technical.md for a dictionary of the flags.
  - setInitialFlags: |
      # global flags
      push hl
      ld hl,initialGlobalFlags
      .loop
      ldi a,(hl)
      cp a,ff
      jr z,.done
      push hl
      call setGlobalFlag
      pop hl
      jr .loop
      .done
      pop hl

      # animal vars
      ld a,(7fff)
      ld (wAnimalRegion),a
      ld a,ff
      ld (wAnimalTutorialFlags),a

      # room flags 4 | 6
      ld a,50
      ld (c7a7),a # start

      # room flags 5 | 6
      ld a,60
      ld (c79a),a # rosa portal

      # room flags 6 | 7
      ld a,c0
      ld (c798),a # troupe
      ld (c7cb),a # first rosa encounter

      # room flag 6
      ld a,40
      ld (c700),a # d6 entrance
      ld (c71d),a # d4 entrance
      ld (c760),a # d3 entrance
      ld (c78a),a # d5 entrance
      ld (c78d),a # d2 entrance
      ld (c796),a # d1 entrance
      ld (c79b),a # sokra stump
      ld (c7b6),a # impa's house
      ld (c7d0),a # d7 entrance
      ld (c7e9),a # sokra in town
      ld (c800),a # d8 entrance
      ld (c829),a # temple of seasons "gate"
      ld (c82a),a # winter tower

      # room flag 0
      ld a,01
      ld (c701),a # flag determines whether flower/rock tile exists

      # give L-3 ring box
      ld a,10
      ld (c697),a # treasure flag
      ld a,03
      ld (wRingBoxLevel),a

      # linked start item
      ld a,(wIsLinkedGame)
      or a
      call nz,giveLinkedStartItem

      ret

  0x0b:
  # custom script command to use on d1 entrance screen: set ccaa to 01 until
  # bit of cfc0 is set. fixes a vanilla bug where dismounting an animal on
  # that screen allowed you to enter without the key.
  - d1EntranceScriptCmd: |
      pop hl
      push bc
      ld bc,9600
      call compareRoom
      pop bc
      ret nz
      ld a,01
      ld (ccaa),a
      xor a
      jp 432d

  - lookupKeyDropBank0b: |
      ld (hl),60
      inc l
      jp lookupKeyDrop

  0x14:
  # make the rod of seasons interaction behave like a regular item,
  # graphically. otherwise asymmetric wide items can't go there.
  - overrideAnimationId: |
      ld e,41
      ld a,(de) # ID
      cp a,e6
      ret nz
      ld e,42
      ld a,(de) # sub ID
      cp a,02
      ld a,e6
      ret nz
      ld a,60
      ret

  0x15:
  # progressive item upgrade data (old ID, old related var, new ID, new addr)
  - progressiveUpgrades: |
      db 01,02,01; dw 52c5 # mirror shield
      db 05,01,05; dw 52dd # noble sword
      db 05,02,05; dw 52e1 # master sword
      db 06,01,06; dw 52f5 # magic boomerang
      db 13,01,13; dw 5329 # hyper slingshot
      db 17,01,17; dw 5331 # roc's cape
      db 19,01,19; dw 52b9 # satchel upgrade 1
      db 19,02,19; dw 52b9 # satchel upgrade 2 (same deal)
      db ff

  - getUpgradedTreasure: /include getUpgradedTreasure
  - getTreasureData_body: /include getTreasureData_body
  - getTreasureDataBCE: /include getTreasureDataBCE
  - getTreasureDataSprite: /include getTreasureDataSprite
  - modifyTreasure: /include modifyTreasure
  - upgradeTreasure: /include upgradeTreasure

  # hard ore item doesn't normally get a subid. values are replaced at
  # randomization.
  - setHardOreIds: |
      inc l
      ld (hl),52
      inc l
      ld (hl),00
      ret

  # set flags that are normally set during the pirate cutscene when skipping
  # it. the season value should be set to the western coast default at
  # randomization.
  - seasonAfterPirateCutscene: db 00
  - setPirateCutsceneFlags: |
      call setGlobalFlag
      ld a,17
      call setGlobalFlag
      ld a,1b
      call setGlobalFlag
      ld hl,c7e2
      set 6,(hl) # remove ship from desert
      ld a,(seasonAfterPirateCutscene)
      ld (wRoomStateModifier),a
      ret

  0x3f:
  # have seed satchel inherently refill all seeds.
  - satchelRefillSeeds: |
      push bc
      call giveTreasure_body
      ld a,b
      pop bc
      push af
      ld a,b
      cp a,TREASURE_SEED_SATCHEL
      jr nz,.notSatchel
      push bc
      push de
      call refillSeedSatchel
      pop de
      pop bc
      .notSatchel
      pop af
      ld b,a
      ret

  # format (ID, subID, jump address). these functions *must* pop af as the last
  # action before returning.
  - customSpriteJumpTable: |
      db 47,00; dw setMembersShop1Sprite
      db 47,02; dw setMembersShop2Sprite
      db 47,05; dw setMembersShop3Sprite
      db 47,0d; dw setShopSprite
      db 59,00; dw setPedestalSprite
      db 60,16; dw setFeatherSprite
      db 6e,00; dw setStolenFeatherSprite
      db 81,00; dw setMarket1Sprite
      db 81,04; dw setMarket2Sprite
      db 81,0d; dw setMarket5Sprite
      db c6,00; dw setHerosCaveSprite
      db e6,02; dw setTempleOfSeasonsSprite
      db ff

  - setMembersShop1Sprite: |
      ld e,08
      ld hl,4cce
      jp setGenericSprite

  - setMembersShop2Sprite: |
      ld e,08
      ld hl,4cd2
      jp setGenericSprite

  - setMembersShop3Sprite: |
      ld e,08
      ld hl,4cd8
      jp setGenericSprite

  - setShopSprite: |
      ld e,08
      ld hl,4ce8
      jp setGenericSprite

  - setPedestalSprite: |
      ld e,0b
      ld hl,6418
      jp setGenericSprite

  - setFeatherSprite: |
      ld e,43
      ld a,(de) # treasure sub ID
      cp a,02
      jp z,setStolenFeatherSprite
      ld hl,671e
      ld a,(wFeatherLevel)
      or a
      jr z,.feather
      ld hl,6721
      .feather
      pop af
      ret

  - setStolenFeatherSprite: |
      ld hl,671e
      ld a,(wFeatherLevel)
      cp a,02
      jr nz,.next
      ld hl,6721
      .next
      pop af
      ret

  - setMarket1Sprite: |
      ld e,09
      ld hl,77da
      jp setGenericSprite

  - setMarket2Sprite: |
      ld e,09
      ld hl,77e2
      jp setGenericSprite

  - setMarket5Sprite: |
      ld e,09
      ld hl,77f4
      jp setGenericSprite

  - setGenericSprite: |
      call lookupItemSprite
      pop af
      ret

  # TODO: if everything is fine then readByte could be changed to something
  # like readBytesWithGap, which just skips a byte? it would make these funcs
  # cleaner and reduce code duplication.

  # ID and subID not adjacent.
  - setHerosCaveSprite: |
      ld e,0a
      ld hl,7b90
      push bc
      call readByte
      ld b,e
      inc hl
      inc hl
      ld e,0a
      call readByte
      ld c,e
      call lookupItemSprite_body
      pop bc
      pop af
      ret

  # ID and subID not adjacent, needs flags changed, can't do wide
  # non-symmetrical items.
  - setTempleOfSeasonsSprite: |
      ld e,15
      ld hl,70ce
      push bc
      call readByte
      ld b,e
      dec hl
      dec hl
      ld e,15
      call readByte
      ld c,e
      call lookupItemSprite_body
      pop bc
      pop af
      ret

  - lookupKeyDrop_body: /include lookupKeyDrop_body

  # don't play item fanfare for the item given at the start of a linked game.
  # this doesn't actually check for linked, just for the room.
  - playSoundExceptForLinkedStartItem: |
      push bc
      push de
      ld e,a
      ld bc,a700
      call compareRoom
      pop de
      pop bc
      ld a,e
      ret z
      jp playSound
