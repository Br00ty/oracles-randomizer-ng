addrs:
  # hram
  hMusicVar: 0xffb5 # used in filterMusic

  # wram
  wAnimalTutorialFlags: 0xc646
  wInventoryB: 0xc680
  wActiveRing: 0xc6c5
  wRingBoxLevel: 0xc6c6
  wActiveGroup: 0xcc49
  wActiveRoom: 0xcc4c
  wAreaFlags: 0xcc50
  wWarpDestGroup: 0xcc63
  wWarpDestIndex: 0xcc64
  wActiveTileType: 0xccb6

  # rom 00
  forceEnableIntroInputs: 0x0862
  playSound: 0x0c74
  setMusicVolume: 0x0c89
  giveTreasure_head: 0x16eb
  refillSeedSatchel: 0x17e5
  objectDelete_useActiveObjectType: 0x219e
  setGlobalFlag: 0x30cd

  # rom 02
  _closeMenu: 0x4f7b

  # rom 3f
  giveTreasure_body: 0x44c8

banks:
  0x00:
  # call a function hl in bank 02, preserving af. e can't be used as a
  # parameter to that function, but it can be returned.
  - callBank2: |
      push af
      ld e,02
      call interBankCall
      pop af
      ret

  # increment hl until (hl) equals either register a or ff. returns z if
  # a match was found.
  - searchValue: |
      push bc
      ld b,a
      .loop
      ldi a,(hl)
      cp b
      jr z,.match
      inc a
      jr z,.noMatch
      jr .loop
      .noMatch
      inc a
      .match
      ld a,b
      pop bc
      ret

  # search for a key bc in a dictionary starting at hl. the dictionary is
  # a series of two-byte keys and two-byte values. if a match is found,
  # hl is the address of the value, and z is set. the dictionary ends
  # when $ff is encountered at the beginning of an entry.
  - lookupWord: |
      .loop
      ldi a,(hl)
      cp a,ff
      jr nz,.next
      or a
      ret
      .next
      cp b
      ldi a,(hl)
      jr nz,.next2
      cp c
      ret z
      .next2
      inc hl
      inc hl
      jr .loop

  # force the item in the temple of seasons cutscene to use normal item
  # animations. TODO: i think there's a better way to do this, like the way
  # that the ages code handles item graphics on non-item interactions.
  - fixRodCutsceneGfx: |
      ld e,41
      ld a,(de)
      cp a,e6
      ret nz
      inc e
      ld a,(de)
      cp a,02
      jr z,.next
      dec e
      ld a,(de)
      ret
      .next
      ld a,60
      ret

  0x01:
  # takes b = high byte of season addr, returns season in b.
  - readDefaultSeason: |
      ld h,7e
      ld l,b
      ld a,(hl)
      ld b,a
      ret

  0x02:
  # warp to ember tree if holding start when closing the map screen.
  - treeWarp: |
      ld a,(wKeysPressed)
      and a,08
      jr z,.done
      ld a,(wAreaFlags)
      and a,01
      jr nz,.warp
      ld a,5a
      jp playSound
      .warp
      ld hl,cbb7
      ld (hl),05
      xor a
      call 5e7b
      .done
      jp _closeMenu

  0x07:
  # if wearing dev ring, change season regardless of where link is standing.
  - devChangeSeason: |
      ld a,(wActiveRing)
      cp a,40
      ret z
      ld a,(wActiveTileType)
      cp a,08
      ret

  0x0a:
  # flags in wGlobalFlags to be set at start of game.
  - initialGlobalFlags: |
      db 0a,1c,ff

  # in linked, start with the item that *would* be in the d0 sword chest
  # instead of the sword.
  - giveLinkedStartItem: |
      ld a,(7ffe)
      ld c,a
      ld a,(7ffd)
      ld (c682),a
      call giveTreasure_head
      xor a
      ld (wInventoryB),a
      ret

  # set flags to skip opening and a bunch of other things. see
  # doc/technical.md for a dictionary of the flags.
  - setInitialFlags: |
      # global flags
      push hl
      ld hl,initialGlobalFlags
      .loop
      ldi a,(hl)
      cp a,ff
      jr z,.done
      push hl
      call setGlobalFlag
      pop hl
      jr .loop
      .done
      pop hl

      # animal vars
      ld a,(7fff)
      ld (wAnimalRegion),a
      ld a,ff
      ld (wAnimalTutorialFlags),a

      # linked start item
      ld a,(wIsLinkedGame)
      or a
      call nz,giveLinkedStartItem

      # room flags 4 | 6
      ld a,50
      ld (c7a7),a

      # room flags 5 | 6
      ld a,60
      ld (c79a),a

      # room flags 6 | 7
      ld a,c0
      ld (c798),a
      ld (c7cb),a

      # room flag 6
      ld a,40
      ld (c7b6),a
      ld (c82a),a
      ld (c800),a
      ld (c700),a
      ld (c796),a
      ld (c78d),a
      ld (c760),a
      ld (c7d0),a
      ld (c71d),a
      ld (c78a),a
      ld (c7e9),a
      ld (c79b),a
      ld (c829),a

      # give L-3 ring box
      ld a,10
      ld (c697),a
      ld a,03
      ld (wRingBoxLevel),a

      ret

  0x0b:
  # custom script command to use on d1 entrance screen: set ccaa to 01 until
  # bit of cfc0 is set. fixes a vanilla bug where dismounting an animal on
  # that screen allowed you to enter without the key.
  - d1EntranceScriptCmd: |
      pop hl
      ld a,(wActiveGroup)
      cp a,00
      ret nz
      ld a,(wActiveRoom)
      cp a,96
      ret nz
      ld a,01
      ld (ccaa),a
      xor a
      jp 432d

  0x3f:
  # have seed satchel inherently refill all seeds.
  - satchelRefillSeeds: |
      push bc
      call giveTreasure_body
      ld a,b
      pop bc
      push af
      ld a,b
      cp a,19
      jr nz,.notSatchel
      push bc
      push de
      call refillSeedSatchel
      pop de
      pop bc
      .notSatchel
      pop af
      ld b,a
      ret
